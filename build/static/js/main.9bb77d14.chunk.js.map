{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","room","Chat","roomId","useParams","setRoomName","input","setInput","Date","length","timestamp","toDate","toUTCString","displayName","onChange","e","target","type","placeholder","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","console","log","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bb77d14.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCIZ3SPTPHGrCvPT6po_DnjxQZMUfmp9G8\",\r\n    authDomain: \"whats-app-clone-2663b.firebaseapp.com\",\r\n    projectId: \"whats-app-clone-2663b\",\r\n    storageBucket: \"whats-app-clone-2663b.appspot.com\",\r\n    messagingSenderId: \"528735119284\",\r\n    appId: \"1:528735119284:web:281bae4228834b0c9674e1\",\r\n    measurementId: \"G-H5PF5N488P\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","import React, { useEffect, useState } from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar} from \"@material-ui/core\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction SidebarChat({id, name, addNewChat}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n   \r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) =>\r\n                setMessages(snapshot.docs.map((doc) =>\r\n                doc.data()))\r\n            );\r\n        }\r\n    }, [id]);\r\n\r\n    \r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat room\");\r\n        if (roomName) {\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect( () => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className='sidebarChat'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat-info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        \r\n    ): (\r\n        <div onClick={ createChat } className=\"sidebarChat\">\r\n            <h2>Add new chat</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext, useContext, useReducer} from \"react\";\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar(){\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => \r\n            setRooms(\r\n                snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-header\">\r\n                <Avatar src={user?.photoURL}/>\r\n            </div>\r\n            <div className=\"sidebar-chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, { useEffect, useState } from 'react';\r\nimport \"./Chat.css\";\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from './firebase';\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\n\r\nfunction Chat() {\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue([]);\r\n\r\n    useEffect(() => {\r\n        if(roomId){\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot((snapshot) => \r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n        }\r\n    }, [roomId])\r\n \r\n    useEffect( () => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\")\r\n        .add({\r\n          message: input,\r\n          name: user.displayName,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat-header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat-header-info\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>\r\n                        Last seen {\"\"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-body\">\r\n                {messages.map((message) => (\r\n                    <p className={`chat-message ${message.name === user.displayName && \"chat-reciever\"}`}>\r\n                        <span className=\"chat-name\">{message.name}</span>  \r\n                            {message.message}\r\n                        <span className=\"chat-timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>           \r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-footer\">\r\n                <form>\r\n                    <input value={input} onChange={ (e) => setInput(e.target.value) } type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}>Send a message</button>\r\n                </form>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport \"./Login.css\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-container\">\r\n\r\n                \r\n                <div className=\"login-text\">\r\n                    <h1>Sign in to Chat App</h1>\r\n                </div>\r\n                <Button onClick={signIn}>\r\n                    Sign in with google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport {useStateValue} from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n\n\n  return (\n    <div className=\"app\">\n\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app-body\">\n          <Router>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/rooms/:roomId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  <Chat />\n                </Route>\n              </Switch>          \n          </Router>     \n\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}