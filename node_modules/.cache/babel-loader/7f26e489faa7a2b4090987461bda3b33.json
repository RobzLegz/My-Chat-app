{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\robzl\\\\OneDrive\\\\Desktop\\\\Programing\\\\Portfolio projects\\\\Whats-app-clone\\\\whatsapp\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./Chat.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from \"react-router-dom\";\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport db from './firebase';\n\nfunction Chat() {\n  _s();\n\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\").doc(roomId).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/human/${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last seen at...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-headerRight\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat-message ${true && 'chat-reciever'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          type: \"text\",\n          placeholder: \"Type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"wSMtKwkLwTsx4W5HFNKmP+7zqTM=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/robzl/OneDrive/Desktop/Programing/Portfolio projects/Whats-app-clone/whatsapp/src/Chat.js"],"names":["React","useEffect","useState","Avatar","IconButton","AttachFile","MoreVert","SearchOutlined","MicIcon","useParams","InsertEmoticonIcon","db","Chat","roomId","roomName","setRoomName","input","setInput","seed","setSeed","messages","setMessages","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","message","Date","timestamp","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./Chat.css\";\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport {AttachFile, MoreVert, SearchOutlined} from \"@material-ui/icons\";\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from \"react-router-dom\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport db from './firebase';\r\n\r\n\r\n\r\n\r\nfunction Chat() {\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(roomId){\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot((snapshot) => \r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n        }\r\n    }, [roomId])\r\n \r\n    useEffect( () => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat-header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat-header-info\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen at...</p>\r\n                    <div className=\"chat-headerRight\">\r\n                        <IconButton>\r\n                            <SearchOutlined />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <AttachFile/>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <MoreVert />\r\n                        </IconButton>      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat-message ${true && 'chat-reciever'}`}>\r\n                        <span className=\"chat-name\">{message.name}</span>  \r\n                            {message.message}\r\n                        <span className=\"chat-timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>           \r\n                    </p>\r\n\r\n                ))}\r\n                \r\n            </div>\r\n            <div className=\"chat-footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={ (e) => setInput(e.target.value) } type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}>Send a message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}